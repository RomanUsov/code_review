for(int b = 0; b < len; b++){
            resultByte[b] = (byte)(buf[b] & 0xFF);
            crc32 ^= (buf[b] << 24);
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
            if(crc32 < 0) {crc32 = (crc32 << 1) ^ POLYNOMIAL;} else {crc32 = crc32 << 1;}
        }
        resultByte[len+3] = (byte)(crc32 & 0xFF);
        resultByte[len+2] = (byte)((crc32 >>> 8)  & 0xFF);
        resultByte[len+1] = (byte)((crc32 >>> 16) & 0xFF);
        resultByte[len]   = (byte)((crc32 >>> 24) & 0xFF);
